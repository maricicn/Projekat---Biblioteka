<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAg3Y9CYN2PQmDdj0Jg3Y9CYN2PQmDdj0Jg3Y9CYN2PQmDdj0Jg3Y9CYN2
        PQmDdj0Jg3Y9CYN1OwmLg1cJr8DSCa/A0gmLg1cJg3U7CYN2PQmDdj0Jg3Y9CYN2PQmDdj0Jg3Y9CYN2
        PQmDdj0Jg3Y9CYN2PQmDdj0Jg3Y9CYN2PQmDdj3Ag3Y9wIN2PcCDdj3Ag3Y9wIN2PcCDdj3Ag3Y9wIN2
        PcCDdj3Ag3Y9wIN2PcCDdj3Ag3U7wIuDV8CvwNLAr8DSwIuDV8CDdTvAg3Y9wIN2PcCDdj3Ag3Y9wIN2
        PcCDdj3Ag3Y9wIN2PcCDdj3Ag3Y9wIN2PcCDdj3Ag3Y9wIN2Pf+Ddj3/g3Y+/4N2Pv+Ddj7/g3Y+/4N2
        Pv+Ddj7/g3Y+/4N2Pv+Ddj7/g3Y+/4N2Pv+DdTz/i4NY/6/A0v+vwNL/i4NY/4N1PP+Ddj7/g3Y+/4N2
        Pv+Ddj7/g3Y+/4N2Pv+Ddj7/g3Y+/4N2Pv+Ddj7/g3Y+/4N2Pf+Ddj3/g3Y9/4V5Q/+coJH/oqun/6Kq
        pv+iqqb/oqqm/6Kqpv+iqqb/oqqm/6Kqpv+iqqb/oqqm/6Kqpf+lr7D/s8ff/7PH3/+lr7D/oqql/6Kq
        pv+iqqb/oqqm/6Kqpv+iqqb/oqqm/6Kqpv+iqqb/oqqm/6Krp/+coJH/hXlD/4N2Pf+Ddjz/hntH/6m4
        wf+0yeT/tMni/7TJ4v+0yeL/tMni/7TJ4v+0yeL/tMni/7PI4v+zyOL/tMji/7TJ4/+2zOf/tszn/7TJ
        4/+0yOL/tMni/7TJ4v+0yeL/tMni/7TJ4v+0yeL/tMni/7PI4v+zyOL/tMnk/6m4wf+Ge0f/g3Y8/4N2
        PP+HfEj/tcPK/8LX7/+wxd//qL3Z/6i92f+ovdn/qL3Z/6i92f+xxuD/wtbt/8DU6/+6zeX/uc3l/7bM
        5/+2zOf/uc3l/7nM5f+swdz/qL3Z/6i92f+ovdn/qL3Z/6i92f+zx+H/wtbt/8LW7f/D1+//tcPK/4d8
        SP+Ddjz/g3Y8/4h9SP/BztT/0OX8/63C3v+ds9H/nrTS/5600v+etNL/nbPR/7DF4P/Q5Pr/zOD2/8LU
        7P+/0ur/t83n/7fN5/+/0ur/wNLq/6e82P+dtNL/nrTS/5600v+etNL/nbPR/7PI4v/Q5Pr/0OT6/9Hl
        /P/BztT/iH1I/4N2PP+Ddjz/iH1I/8HO1P/Q5fz/vNDq/7PI4/+zyOP/s8jj/7PI4/+yyOP/vdLr/9Dk
        +v/M4Pb/wtTs/7/S6v+3zef/t83n/7/S6v/B0+v/tsvl/7PI4/+zyOP/s8jj/7PI4/+zyOP/v9Ts/9Dk
        +v/Q5Pr/0eX8/8HO1P+IfUj/g3Y8/4N2PP+IfUj/wc7U/9Hl/P/R5fv/0eX7/9Hl+//R5fv/0eX7/9Dk
        +v/Q5Pr/0eX7/83h9//C1Oz/v9Lq/7fN5/+3zef/v9Lq/8LU7P/N4ff/0eX7/9Hl+//R5fv/0OT6/9Dk
        +v/Q5Pr/0eX7/9Hl+//R5fz/wc7U/4h9SP+Ddjz/g3Y8/4h9SP/BztT/0eX8/8ba8v/B1u7/wdbu/8HW
        7v/I3fT/0OT6/8vf9v/B1u7/wdXt/8HT6/+/0ur/t83n/7fN5/+/0ur/wdPr/8HV7f/B1u7/wdbu/8HW
        7v/J3fT/0OT6/8re9f/B1u7/xtry/9Hl/P/BztT/iH1I/4N2PP+Ddjz/iH1I/8HO1P/Q5fz/rsPf/560
        0v+ftdP/nrTS/7bL5f/R5fv/v9Ps/5+10/+nvNn/wNLq/7/S6v+3zef/t83n/7/S6v/A0ur/p7zZ/561
        0/+ftdP/nrTT/7nO6P/S5vv/vNHq/5600v+uw9//0OX8/8HO1P+IfUj/g3Y8/4N2PP+IfUj/wc7U/9Dl
        /P+1yeT/qL3a/6m+2/+ovdv/u9Dq/9Hl+//C1+//qb7b/6/D3//A0ur/v9Lq/7fN5/+3zef/v9Lq/8DS
        6v+vw9//qb7b/6m+2/+pvtv/vtLr/9Hl+//A1O3/qL3a/7XJ5P/Q5fz/wc7U/4h9SP+Ddjz/g3Y8/4h9
        SP/BztT/0eX8/87j+f/N4vj/zeL4/83i+P/O4/n/0OT6/8/j+f/N4vj/yt71/8LU7P+/0ur/t83n/7fN
        5/+/0ur/wtTs/8re9f/N4vj/zeL4/83i+P/P4/n/0OT6/8/j+f/N4vj/zuP5/9Hl/P/BztT/iH1I/4N2
        PP+Ddjz/iH1I/8HO1P/R5fz/zOH3/8rf9f/K3/X/yt/1/8rf9f/K3vX/yt71/8rf9f/I3PP/wdTr/7/S
        6v+3zef/t83n/7/S6v/B1Ov/yNzz/8rf9f/K3/X/yt/1/8re9f/K3vX/yt71/8rf9f/M4Pf/0eX8/8HO
        1P+IfUj/g3Y8/4N2PP+IfUj/wc7U/9Dl/P+yx+L/pLnX/6W62P+lutj/pbrY/6W62P+lutj/pbrY/6zA
        3f/A0ur/v9Lq/7fN5/+3zef/v9Lq/8DS6v+swN3/pbrY/6W62P+lutj/pbrY/6W62P+lutj/pLnX/7LH
        4v/Q5fz/wc7U/4h9SP+Ddjz/g3Y8/4h9SP/BztT/0OX8/7DF4P+httT/orfV/6K31f+it9X/orfV/6K3
        1f+it9X/qr7a/8DS6v+/0ur/t83n/7fN5/+/0ur/wNLq/6q+2v+it9X/orfV/6K31f+it9X/orfV/6K3
        1f+httT/sMTg/9Dl/P/BztT/iH1I/4N2PP+Ddjz/iH1I/8HO1P/R5fz/yd70/8bb8v/G2/L/xtvy/8bb
        8v/G2/L/xtvy/8bb8v/F2fD/wdPr/7/S6v+3zef/t83n/7/S6v/B0+v/xdnw/8bb8v/G2/L/xtvy/8bb
        8v/G2/L/xtvy/8bb8v/J3vT/0eX8/8HO1P+IfUj/g3Y8/4N2PP+IfUj/wc7U/9Hl/P/Q5Pr/0OT6/9Dk
        +v/Q5Pr/0OT6/9Dk+v/Q5Pr/0OT6/8zg9v/C1Oz/v9Lq/7fN5/+3zef/v9Lq/8LU7P/M4Pb/0OT6/9Hl
        +v/R5fr/0OT6/9Dk+v/Q5Pr/0OT6/9Dk+v/R5fz/wc7U/4h9SP+Ddjz/g3Y8/4h9SP/BztT/0OX8/7jN
        5/+twt//rsPf/67D3/+uw9//rsPf/67D3/+uw9//s8fi/8DS6/+/0ur/t83n/7fN5/+/0ur/wNLr/7PH
        4v+uw9//xNjw/9Hl+/++0+z/rcLf/67D3/+twt//uM3n/9Dl/P/BztT/iH1I/4N2PP+Ddjz/iH1I/8HO
        1P/Q5fz/rcLe/52z0f+etNL/nrTS/5600v+etNL/nrTS/5200v+nvNj/wNLq/7/S6v+3zef/t83n/7/S
        6v/A0ur/p7zY/5600v++0+z/0eX7/7bL5f+ds9H/nrTS/52z0f+twt7/0OT8/8HO1P+IfUj/g3Y8/4N2
        PP+IfUj/wc7U/9Hl/P/C1+//vNHq/7zR6v+80er/vNHq/7zR6v+80er/vNHq/73R6v/B0+v/v9Lq/7fN
        5/+3zef/v9Lq/8HT6/+90er/vNHq/8nd9P/R5fr/xdry/7zR6v+80er/vNHq/8LX7//R5fz/wc7U/4h9
        SP+Ddjz/g3Y8/4h9SP/BztT/0eX8/9Hl+//S5vv/0ub7/9Lm+//S5vv/0ub7/9Lm+//S5vv/zuH3/8LU
        7P+/0ur/t83n/7fN5/+/0ur/wtTs/87h9//S5vv/0eX7/9Hl+//S5vv/0ub7/9Lm+//S5vv/0eX7/9Hl
        /P/BztT/iH1I/4N2PP+Ddjz/iH1I/8HO1P/R5fz/wNXt/7nO6P+5zuj/uc7o/7nO6P+5zuj/uc7o/7nO
        6P+7z+n/wdPr/7/S6v+3zef/t83n/7/S6v/B0+v/u8/p/7nO6P+5zuj/uc7o/7nO6P+5zuj/uc7o/7nO
        6P/A1e3/0eX8/8HO1P+IfUj/g3Y8/4N2PP+IfUj/wc7U/9Dl/P+twt7/nbPR/5600v+etNL/nrTS/560
        0v+etNL/nbTS/6e82P/A0ur/v9Lq/7fN5/+3zef/v9Lq/8DS6v+nvNj/nbTS/5600v+etNL/nrTS/560
        0v+etNL/nbPR/63C3v/Q5Pz/wc7U/4h9SP+Ddjz/gnU8pYqATqrF1eDt0OT7/7rP6f+vxuH/sMbh/7DG
        4f+wxuH/sMbh/7DG4f+wxuH/tMnj/8DT6//A0uvxt83nrLfN56zA0uvxwNPr/7TJ4/+wxuH/sMbh/7DG
        4f+wxuH/sMbh/7DG4f+vxuH/us/o/9Dk+//F1eDtioBOqoJ1PKX///8AzN7vENDk+szQ5Pr/0OT6/9Dk
        +v/Q5Pr/0OT6/9Dk+v/Q5Pr/0OT6/9Dk+v/M4Pb/wtTs/8HT69fB0+sWwdPrFsHT69fC1Oz/zOD2/9Dk
        +v/Q5Pr/0OT6/9Dk+v/Q5Pr/0OT6/9Dk+v/Q5Pr/0OT6/9Dk+szM3u8Q////ANDk+gDQ5PoL0OT6mtDk
        +sLQ5PrA0OT6wNDk+sDQ5PrA0OT6wNDk+sDQ5PrA0OT6wMzg9sDC1OzCwdProsHT6xDB0+sQwdProsLU
        7MLM4PbA0OT6wNDk+sDQ5PrA0OT6wNDk+sDQ5PrA0OT6wNDk+sDQ5PrC0OT6mtDk+gvQ5PoA0OT6ANDk
        +gHQ5PoH0OT6CdDk+gnQ5PoJ0OT6CdDk+gnQ5PoJ0OT6CdDk+gnQ5PoJzOD2CcLU7AnB0+sIwdPrAcHT
        6wHB0+sIwtTsCczg9gnQ5PoJ0OT6CdDk+gnQ5PoJ0OT6CdDk+gnQ5PoJ0OT6CdDk+gnQ5PoH0OT6AdDk
        +gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgAAAAYAAAAGAAAAB//////////8=
</value>
  </data>
</root>